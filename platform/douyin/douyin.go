package douyin

import (
	"errors"
	"fmt"
	"net/url"
	"strings"

	jsoniter "github.com/json-iterator/go"
	"github.com/luxcgo/lifesaver/config"
	"github.com/luxcgo/lifesaver/platform"
	"github.com/luxcgo/lifesaver/util"
)

func init() {
	platform.SharedManager.RegisterCtrl(
		new(douyinCtrl),
	)
}

type douyinCtrl struct {
	platform.Base
}

func (c *douyinCtrl) Type() string {
	return "douyin"
}

func (c *douyinCtrl) Name() string {
	return "抖音"
}

func (c *douyinCtrl) WithRoomOn() platform.Option {
	return func(s *platform.Snapshot) error {
		if config.APP.PlatformConfig.DouyinCookie == "" {
			return fmt.Errorf("抖音cookie未配置")
		}
		req := &util.HttpRequest{
			URL:          fmt.Sprintf("https://live.douyin.com/%s", s.RoomID),
			Method:       "GET",
			ResponseData: *new(string),
			ContentType:  "application/form-data",
			Header: map[string]string{
				"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36 Edg/94.0.992.38",
				"referer":    "https://live.douyin.com/",
				"cookie":     config.APP.PlatformConfig.DouyinCookie,
			},
		}
		var err error
		if err = req.Send(); err != nil {
			return err
		}
		resp := fmt.Sprint(req.ResponseData)
		splits := strings.Split(resp, `<script id="RENDER_DATA" type="application/json">`)
		if len(splits) < 2 {
			return fmt.Errorf("fail to find url")
		}
		resp = splits[1]
		resp = strings.Split(resp, `</script>`)[0]
		resp, err = url.QueryUnescape(resp)
		if err != nil {
			return err
		}
		var autoGenerated AutoGenerated
		err = jsoniter.UnmarshalFromString(resp, &autoGenerated)
		if err != nil {
			return err
		}

		// 抖音 status == 2 代表是开播的状态
		if autoGenerated.InitialState.RoomStore.RoomInfo.Room.Status != 2 {
			return errors.New("not on air")
		}

		s.RoomOn = true
		streamDataStr := autoGenerated.InitialState.RoomStore.RoomInfo.Room.StreamURL.LiveCoreSdkData.PullData.StreamData
		var streamData StreamData
		err = jsoniter.UnmarshalFromString(streamDataStr, &streamData)
		if err != nil {
			return err
		}
		s.StreamURL = streamData.Data.Origin.Main.Flv
		s.RoomName = autoGenerated.InitialState.RoomStore.RoomInfo.Room.Title
		return nil
	}
}

func (c *douyinCtrl) WithStreamURL() platform.Option {
	return func(s *platform.Snapshot) (err error) {
		return nil
	}
}
